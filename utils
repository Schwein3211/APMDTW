#!/usr/bin/env python3
# -*- coding:utf-8 -*-

import linecache
import math
# import matplotlib.pyplot as plt
from typing import Callable, Any

from matplotlib.lines import Line2D
import pandas as pd
import numpy as np
import os
from scipy import stats
from scipy.misc import *
import debug.dbd_cf
from debug import dbd_cf
from parameter_cal import cf

import warnings
warnings.filterwarnings("ignore")

def load_data(name=None, line_num=None):
    y = linecache.getline(name, line_num)
    y_list = y.split(',')
    # delete the index
    y_list.pop(0)
    y_list = [float(item) for item in y_list if item.strip()]
    return y_list

def load_data_query(name=None, line_num=None):
    y = linecache.getline(name, line_num)
    y_list = y.split(',')
    # delete the index
    y_list.pop(0)
    y_list = [float(item) for item in y_list if item.strip()]
    return y_list


def load_timeseries_id(name=None, line_num=None):
    y = linecache.getline(name, line_num)
    y_list = y.split(',')
    # delete the index
    return y_list[0]

def write_result_file_ts_similarity(target_name, method_name, src_name, result_series):
    target_abs_directory = os.getcwd() + '/csv/' + target_name
    if not os.path.exists(target_abs_directory):
        df = pd.DataFrame(columns=pd.MultiIndex.from_product([['APMDTW','CDC-DTW','DTW','DDTW','shapeDTW','SW-DTW','EventDTW'], ['Accuracy']]))
        df.loc[src_name, method_name] = result_series
        df.to_csv(target_abs_directory, header=True, index=True)
    else:
        df = pd.read_csv(target_abs_directory, engine='python', header=[0,1], index_col=0)
        df.loc[src_name, method_name] = result_series
        df.to_csv(target_abs_directory, header=True, index=True)
